
package org.example.proxy;

import javax.jws.WebMethod;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ReleveService", targetNamespace = "http://service.example.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ReleveService {


    /**
     * 
     * @return
     *     returns org.example.proxy.Releve
     * @throws JAXBException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getReleve", targetNamespace = "http://service.example.org/", className = "org.example.proxy.GetReleve")
    @ResponseWrapper(localName = "getReleveResponse", targetNamespace = "http://service.example.org/", className = "org.example.proxy.GetReleveResponse")
    @Action(input = "http://service.example.org/ReleveService/getReleveRequest", output = "http://service.example.org/ReleveService/getReleveResponse", fault = {
        @FaultAction(className = JAXBException_Exception.class, value = "http://service.example.org/ReleveService/getReleve/Fault/JAXBException")
    })
    public Releve getReleve()
        throws JAXBException_Exception
    ;

}
